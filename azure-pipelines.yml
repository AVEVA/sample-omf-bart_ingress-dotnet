trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

resources:
  repositories:
    - repository: OpsGuildAutomationRepo
      type: git
      name: DevOps/opsguild.automation
      ref: refs/heads/main
    - repository: templates
      type: github
      name: AVEVA/AVEVA-Samples
      endpoint: AVEVA

variables:
  - name: CredFile
    value: appsettings.json
  - name: CredFileLibrary
    value: product-readiness.bartingress_dotnet.json

parameters:
  - name: pool
    default: 00-OSIManaged-Build
  - name: containerDemands
    type: object
    default: ['SKU -equals VSEnterprise']

jobs:
  - job: Tests
    pool:
      name: ${{ parameters.pool }}
      demands: ${{ parameters.containerDemands }}
    variables:
      - name: CdsTenantId
        value: $(TenantId)
      - name: CdsNamespaceId
        value: $(NamespaceId)
      - name: CdsClientId
        value: $(ClientId)
      - name: CdsClientSecret
        value: $(ClientSecret)
      - name: PiWebApiUri
        value: $(PIWebAPI)
      - name: CdsUri
        value: $(Resource)
      - name: SendToCds
        value: true
      - name: SendToEds
        value: true
      - name: SendToPi
        value: true
      - name: ValidateEndpointCertificate
        value: false
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, ClientId, ClientSecret, PIWebAPI, Username, Password, BartApiKey, Resource'

      - task: UseDotNet@2
        displayName: 'Install dotnet 6'
        inputs:
          packageType: 'sdk'
          version: '6.x'

      - task: DotNetCoreCLI@2
        displayName: 'Nuget restore'
        inputs:
          command: restore

      - task: DotNetCoreCLI@2
        displayName: 'Run tests'
        inputs:
          command: test
          publishTestResults: true
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
